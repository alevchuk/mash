#!/usr/bin/env Rscript

library(rjson)

script_path <- sub("--file=","", commandArgs()[grep("--file=", commandArgs())])
script_path_list <- strsplit(script_path, '/')[[1]]
script_name <- script_path_list[[length(script_path_list)]]

script_args <- commandArgs(trailingOnly=T)
if(length(script_args) != 1) {
       cat(paste("Usage:", script_name, "<in_msa.json>", "\n\n"))
       cat(paste(
         "Required Arguments",
         "  <in_msa>  Input multiple sequence alignment (msa) in JSON format.", 
         "\n",
         sep="\n"))
       quit()
}

msa_json_file <- script_args[[1]]
msa <- fromJSON(readLines(msa_json_file))

# Convert to matrix
num_sequences <- length(msa)
msa <- paste(msa, sep="", collapse="")
msa <- strsplit(msa, "")[[1]]
msa <- matrix(msa, nrow=num_sequences, byrow=T)


# Default Gblocks Threasholds
IS_ratio <- 0.50
FS_ratio <- 0.85

IS  <- floor(num_sequences * IS_ratio + 1)
FS  <- floor(num_sequences * FS_ratio)
CP  <- 8
BL1 <- 15
BL2 <- 10


step1_cols <- apply(msa, 2, function(col) {
                               num_identical <- max(table(col))
                             
                             
                               if (num_identical < IS || any(col == '-')) {
                                 return("nonconserved")
                               }
                               else if (num_identical < FS) {
                                 return("conserved")
                               }
                               else {
                                 return("highly conserved")
                               }
                               
                             }
               )

step1_rows <- function(col) {
  t <- table(msa[,col])
  most_conserved_residue <- names(which(t == max(t)))
  which(msa[,col] == most_conserved_residue)
}

get_pos <- function(type) {
  f1 <- function(col)
  { 
    lapply(step1_rows(col), function(row) { list(row, col, col) }) 
  }
  unlist(recursive=F, lapply(which(step1_cols == type), f1))
}



colors <- list(
  list(color="g9", positions=get_pos("highly conserved")),
  list(color="g8", positions=get_pos("conserved"))
)


out <- list(type="msa-highlights", version="1", colors=colors)

cat(toJSON(out))
cat("\n")

