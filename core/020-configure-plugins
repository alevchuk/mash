#!/usr/bin/env Rscript

library(rjson)

load.biostirngs = function() { # Loaded after checking parameters
  library(Biostrings) 
}


initial.options <- commandArgs()
file.arg.name <- "--file="

script.path <- sub(file.arg.name, "", 
  initial.options[grep(file.arg.name, initial.options)])

script.path.list <- strsplit(script.path, '/')[[1]]
script.dir.list  <- script.path.list[1:(length(script.path.list)-1)]

software.dir  <- paste(c(script.dir.list, '..'), sep='/', collapse='/')
script.name <- script.path.list[[length(script.path.list)]]



script.args <- commandArgs(trailingOnly=T)

if(length(script.args) != 1) {
       cat(paste(
         paste("Usage:", script.name, "<webdata>\n"),
         "Required Options",
         "  <webdata>      directory with files produced by the analyzer",
         "",
         sep="\n"))
       quit()
}

dir.path.webdata  <- sub("/$", "", script.args[[1]])
dir.name.webdata  <- tail(strsplit(dir.path.webdata, "/")[[1]], 1)

file.menu    <- paste(dir.path.webdata, 'menu.json', sep='/')


dir.plugins  <- paste(software.dir, "plugins", sep='/')
plugins      <- dir(dir.plugins, pattern="*.[0-9,a-z,-]+-scorer$")


# Put nil plugin in front
nil_plugin   <- "nil.coloring-scorer"
if (length(which(nil_plugin == plugins))) { # If nil is one of the plugins
  plugins <<- unlist(list(nil_plugin, plugins[which(nil_plugin != plugins)]))
}


# Generate the Menu file
writeLines(toJSON(list(type="menu", version="2", webdata_dir=dir.name.webdata,
                  plugins=plugins)), file.menu)
